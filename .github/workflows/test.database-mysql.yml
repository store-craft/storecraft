name: Test database-mysql
on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql
        env:
          MYSQL_DATABASE: main
          MYSQL_ROOT_PASSWORD: password
        # Set health checks 
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        working-directory: ./packages/databases/database-mysql
        run: npm ci

      - name: Test
        run: npm test
        working-directory: ./packages/databases/database-mysql
        # Environment variables used by the test
        env:
          # The hostname used to communicate with the mysql service container
          MYSQL_DATABASE: main
          MYSQL_USER: root
          MYSQL_PASSWORD: password
          MYSQL_PORT: 3306
          MYSQL_HOST: localhost
