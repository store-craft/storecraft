import { readFile, writeFile } from 'node:fs/promises';
import { fileURLToPath } from "node:url";
import * as path from 'node:path';
// const gradient = require('gradient-string');
import gradient from 'gradient-string'
import chalk from 'chalk'
import { escape } from 'node:querystring';
import ansis from 'ansis';

const KBLUE = '\x1b[32m'
const OKCYAN = '\\033[96m'
// https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797
// https://www.freeformatter.com/javascript-escape.html#before-output

const banner = '         __                                  ______ \r\n   _____\/ \/_____  ________  ______________ _\/ __\/ \/_\r\n  \/ ___\/ __\/ __ \\\/ ___\/ _ \\\/ ___\/ ___\/ __ `\/ \/_\/ __\/\r\n (__  ) \/_\/ \/_\/ \/ \/  \/  __\/ \/__\/ \/  \/ \/_\/ \/ __\/ \/_  \r\n\/____\/\\__\/\\____\/_\/   \\___\/\\___\/_\/   \\__,_\/_\/  \\__\/  \r\n                                                    \r\n'
const banner3 = '   _______________  ____  ______   __________  ___    ____________\r\n  \/ ___\/_  __\/ __ \\\/ __ \\\/ ____\/  \/ ____\/ __ \\\/   |  \/ ____\/_  __\/\r\n  \\__ \\ \/ \/ \/ \/ \/ \/ \/_\/ \/ __\/    \/ \/   \/ \/_\/ \/ \/| | \/ \/_    \/ \/   \r\n ___\/ \/\/ \/ \/ \/_\/ \/ _, _\/ \/___   \/ \/___\/ _, _\/ ___ |\/ __\/   \/ \/    \r\n\/____\/\/_\/  \\____\/_\/ |_\/_____\/   \\____\/_\/ |_\/_\/  |_\/_\/     \/_\/     \r\n                                                                  '
const banner3_1 = '%20%20%20%1B%5B38;2;255;0;0m_%1B%5B39m%1B%5B38;2;255;0;7m_%1B%5B39m%1B%5B38;2;255;0;14m_%1B%5B39m%1B%5B38;2;255;0;22m_%1B%5B39m%1B%5B38;2;255;0;29m_%1B%5B39m%1B%5B38;2;255;0;36m_%1B%5B39m%1B%5B38;2;255;0;43m_%1B%5B39m%1B%5B38;2;255;0;51m_%1B%5B39m%1B%5B38;2;255;0;58m_%1B%5B39m%1B%5B38;2;255;0;65m_%1B%5B39m%1B%5B38;2;255;0;72m_%1B%5B39m%1B%5B38;2;255;0;80m_%1B%5B39m%1B%5B38;2;255;0;87m_%1B%5B39m%1B%5B38;2;255;0;94m_%1B%5B39m%1B%5B38;2;255;0;101m_%1B%5B39m%20%20%1B%5B38;2;255;0;109m_%1B%5B39m%1B%5B38;2;255;0;116m_%1B%5B39m%1B%5B38;2;255;0;123m_%1B%5B39m%1B%5B38;2;255;0;130m_%1B%5B39m%20%20%1B%5B38;2;255;0;138m_%1B%5B39m%1B%5B38;2;255;0;145m_%1B%5B39m%1B%5B38;2;255;0;152m_%1B%5B39m%1B%5B38;2;255;0;159m_%1B%5B39m%1B%5B38;2;255;0;167m_%1B%5B39m%1B%5B38;2;255;0;174m_%1B%5B39m%20%20%20%1B%5B38;2;255;0;181m_%1B%5B39m%1B%5B38;2;255;0;188m_%1B%5B39m%1B%5B38;2;255;0;196m_%1B%5B39m%1B%5B38;2;255;0;203m_%1B%5B39m%1B%5B38;2;255;0;210m_%1B%5B39m%1B%5B38;2;255;0;217m_%1B%5B39m%1B%5B38;2;255;0;225m_%1B%5B39m%1B%5B38;2;255;0;232m_%1B%5B39m%1B%5B38;2;255;0;239m_%1B%5B39m%1B%5B38;2;255;0;246m_%1B%5B39m%20%20%1B%5B38;2;255;0;254m_%1B%5B39m%1B%5B38;2;249;0;255m_%1B%5B39m%1B%5B38;2;242;0;255m_%1B%5B39m%20%20%20%20%1B%5B38;2;235;0;255m_%1B%5B39m%1B%5B38;2;227;0;255m_%1B%5B39m%1B%5B38;2;220;0;255m_%1B%5B39m%1B%5B38;2;213;0;255m_%1B%5B39m%1B%5B38;2;206;0;255m_%1B%5B39m%1B%5B38;2;198;0;255m_%1B%5B39m%1B%5B38;2;191;0;255m_%1B%5B39m%1B%5B38;2;184;0;255m_%1B%5B39m%1B%5B38;2;177;0;255m_%1B%5B39m%1B%5B38;2;169;0;255m_%1B%5B39m%1B%5B38;2;162;0;255m_%1B%5B39m%1B%5B38;2;155;0;255m_%1B%5B39m%0D%0A%20%20%1B%5B38;2;148;0;255m/%1B%5B39m%20%1B%5B38;2;140;0;255m_%1B%5B39m%1B%5B38;2;133;0;255m_%1B%5B39m%1B%5B38;2;126;0;255m_%1B%5B39m%1B%5B38;2;119;0;255m/%1B%5B39m%1B%5B38;2;111;0;255m_%1B%5B39m%20%20%1B%5B38;2;104;0;255m_%1B%5B39m%1B%5B38;2;97;0;255m_%1B%5B39m%1B%5B38;2;90;0;255m/%1B%5B39m%20%1B%5B38;2;82;0;255m_%1B%5B39m%1B%5B38;2;75;0;255m_%1B%5B39m%20%1B%5B38;2;68;0;255m%5C%1B%5B39m%1B%5B38;2;61;0;255m/%1B%5B39m%20%1B%5B38;2;53;0;255m_%1B%5B39m%1B%5B38;2;46;0;255m_%1B%5B39m%20%1B%5B38;2;39;0;255m%5C%1B%5B39m%1B%5B38;2;32;0;255m/%1B%5B39m%20%1B%5B38;2;24;0;255m_%1B%5B39m%1B%5B38;2;17;0;255m_%1B%5B39m%1B%5B38;2;10;0;255m_%1B%5B39m%1B%5B38;2;3;0;255m_%1B%5B39m%1B%5B38;2;0;4;255m/%1B%5B39m%20%20%1B%5B38;2;0;12;255m/%1B%5B39m%20%1B%5B38;2;0;19;255m_%1B%5B39m%1B%5B38;2;0;26;255m_%1B%5B39m%1B%5B38;2;0;33;255m_%1B%5B39m%1B%5B38;2;0;41;255m_%1B%5B39m%1B%5B38;2;0;48;255m/%1B%5B39m%20%1B%5B38;2;0;55;255m_%1B%5B39m%1B%5B38;2;0;62;255m_%1B%5B39m%20%1B%5B38;2;0;70;255m%5C%1B%5B39m%1B%5B38;2;0;77;255m/%1B%5B39m%20%20%20%1B%5B38;2;0;84;255m%7C%1B%5B39m%20%20%1B%5B38;2;0;91;255m/%1B%5B39m%20%1B%5B38;2;0;99;255m_%1B%5B39m%1B%5B38;2;0;106;255m_%1B%5B39m%1B%5B38;2;0;113;255m_%1B%5B39m%1B%5B38;2;0;120;255m_%1B%5B39m%1B%5B38;2;0;128;255m/%1B%5B39m%1B%5B38;2;0;135;255m_%1B%5B39m%20%20%1B%5B38;2;0;142;255m_%1B%5B39m%1B%5B38;2;0;149;255m_%1B%5B39m%1B%5B38;2;0;157;255m/%1B%5B39m%0D%0A%20%20%1B%5B38;2;0;164;255m%5C%1B%5B39m%1B%5B38;2;0;171;255m_%1B%5B39m%1B%5B38;2;0;178;255m_%1B%5B39m%20%1B%5B38;2;0;186;255m%5C%1B%5B39m%20%1B%5B38;2;0;193;255m/%1B%5B39m%20%1B%5B38;2;0;200;255m/%1B%5B39m%20%1B%5B38;2;0;207;255m/%1B%5B39m%20%1B%5B38;2;0;215;255m/%1B%5B39m%20%1B%5B38;2;0;222;255m/%1B%5B39m%20%1B%5B38;2;0;229;255m/%1B%5B39m%20%1B%5B38;2;0;236;255m/%1B%5B39m%1B%5B38;2;0;244;255m_%1B%5B39m%1B%5B38;2;0;251;255m/%1B%5B39m%20%1B%5B38;2;0;255;252m/%1B%5B39m%20%1B%5B38;2;0;255;245m_%1B%5B39m%1B%5B38;2;0;255;237m_%1B%5B39m%1B%5B38;2;0;255;230m/%1B%5B39m%20%20%20%20%1B%5B38;2;0;255;223m/%1B%5B39m%20%1B%5B38;2;0;255;216m/%1B%5B39m%20%20%20%1B%5B38;2;0;255;208m/%1B%5B39m%20%1B%5B38;2;0;255;201m/%1B%5B39m%1B%5B38;2;0;255;194m_%1B%5B39m%1B%5B38;2;0;255;187m/%1B%5B39m%20%1B%5B38;2;0;255;179m/%1B%5B39m%20%1B%5B38;2;0;255;172m/%1B%5B39m%1B%5B38;2;0;255;165m%7C%1B%5B39m%20%1B%5B38;2;0;255;158m%7C%1B%5B39m%20%1B%5B38;2;0;255;150m/%1B%5B39m%20%1B%5B38;2;0;255;143m/%1B%5B39m%1B%5B38;2;0;255;136m_%1B%5B39m%20%20%20%20%1B%5B38;2;0;255;129m/%1B%5B39m%20%1B%5B38;2;0;255;121m/%1B%5B39m%20%20%20%0D%0A%20%1B%5B38;2;0;255;114m_%1B%5B39m%1B%5B38;2;0;255;107m_%1B%5B39m%1B%5B38;2;0;255;100m_%1B%5B39m%1B%5B38;2;0;255;92m/%1B%5B39m%20%1B%5B38;2;0;255;85m/%1B%5B39m%1B%5B38;2;0;255;78m/%1B%5B39m%20%1B%5B38;2;0;255;71m/%1B%5B39m%20%1B%5B38;2;0;255;63m/%1B%5B39m%20%1B%5B38;2;0;255;56m/%1B%5B39m%1B%5B38;2;0;255;49m_%1B%5B39m%1B%5B38;2;0;255;42m/%1B%5B39m%20%1B%5B38;2;0;255;34m/%1B%5B39m%20%1B%5B38;2;0;255;27m_%1B%5B39m%1B%5B38;2;0;255;20m,%1B%5B39m%20%1B%5B38;2;0;255;13m_%1B%5B39m%1B%5B38;2;0;255;5m/%1B%5B39m%20%1B%5B38;2;2;255;0m/%1B%5B39m%1B%5B38;2;9;255;0m_%1B%5B39m%1B%5B38;2;16;255;0m_%1B%5B39m%1B%5B38;2;23;255;0m_%1B%5B39m%20%20%20%1B%5B38;2;31;255;0m/%1B%5B39m%20%1B%5B38;2;38;255;0m/%1B%5B39m%1B%5B38;2;45;255;0m_%1B%5B39m%1B%5B38;2;52;255;0m_%1B%5B39m%1B%5B38;2;60;255;0m_%1B%5B39m%1B%5B38;2;67;255;0m/%1B%5B39m%20%1B%5B38;2;74;255;0m_%1B%5B39m%1B%5B38;2;81;255;0m,%1B%5B39m%20%1B%5B38;2;89;255;0m_%1B%5B39m%1B%5B38;2;96;255;0m/%1B%5B39m%20%1B%5B38;2;103;255;0m_%1B%5B39m%1B%5B38;2;110;255;0m_%1B%5B39m%1B%5B38;2;118;255;0m_%1B%5B39m%20%1B%5B38;2;125;255;0m%7C%1B%5B39m%1B%5B38;2;132;255;0m/%1B%5B39m%20%1B%5B38;2;139;255;0m_%1B%5B39m%1B%5B38;2;147;255;0m_%1B%5B39m%1B%5B38;2;154;255;0m/%1B%5B39m%20%20%20%1B%5B38;2;161;255;0m/%1B%5B39m%20%1B%5B38;2;168;255;0m/%1B%5B39m%20%20%20%20%0D%0A%1B%5B38;2;176;255;0m/%1B%5B39m%1B%5B38;2;183;255;0m_%1B%5B39m%1B%5B38;2;190;255;0m_%1B%5B39m%1B%5B38;2;197;255;0m_%1B%5B39m%1B%5B38;2;205;255;0m_%1B%5B39m%1B%5B38;2;212;255;0m/%1B%5B39m%1B%5B38;2;219;255;0m/%1B%5B39m%1B%5B38;2;226;255;0m_%1B%5B39m%1B%5B38;2;234;255;0m/%1B%5B39m%20%20%1B%5B38;2;241;255;0m%5C%1B%5B39m%1B%5B38;2;248;255;0m_%1B%5B39m%1B%5B38;2;255;255;0m_%1B%5B39m%1B%5B38;2;255;247;0m_%1B%5B39m%1B%5B38;2;255;240;0m_%1B%5B39m%1B%5B38;2;255;233;0m/%1B%5B39m%1B%5B38;2;255;226;0m_%1B%5B39m%1B%5B38;2;255;218;0m/%1B%5B39m%20%1B%5B38;2;255;211;0m%7C%1B%5B39m%1B%5B38;2;255;204;0m_%1B%5B39m%1B%5B38;2;255;197;0m/%1B%5B39m%1B%5B38;2;255;189;0m_%1B%5B39m%1B%5B38;2;255;182;0m_%1B%5B39m%1B%5B38;2;255;175;0m_%1B%5B39m%1B%5B38;2;255;168;0m_%1B%5B39m%1B%5B38;2;255;160;0m_%1B%5B39m%1B%5B38;2;255;153;0m/%1B%5B39m%20%20%20%1B%5B38;2;255;146;0m%5C%1B%5B39m%1B%5B38;2;255;139;0m_%1B%5B39m%1B%5B38;2;255;131;0m_%1B%5B39m%1B%5B38;2;255;124;0m_%1B%5B39m%1B%5B38;2;255;117;0m_%1B%5B39m%1B%5B38;2;255;110;0m/%1B%5B39m%1B%5B38;2;255;102;0m_%1B%5B39m%1B%5B38;2;255;95;0m/%1B%5B39m%20%1B%5B38;2;255;88;0m%7C%1B%5B39m%1B%5B38;2;255;81;0m_%1B%5B39m%1B%5B38;2;255;73;0m/%1B%5B39m%1B%5B38;2;255;66;0m_%1B%5B39m%1B%5B38;2;255;59;0m/%1B%5B39m%20%20%1B%5B38;2;255;52;0m%7C%1B%5B39m%1B%5B38;2;255;44;0m_%1B%5B39m%1B%5B38;2;255;37;0m/%1B%5B39m%1B%5B38;2;255;30;0m_%1B%5B39m%1B%5B38;2;255;23;0m/%1B%5B39m%20%20%20%20%20%1B%5B38;2;255;15;0m/%1B%5B39m%1B%5B38;2;255;8;0m_%1B%5B39m%1B%5B38;2;255;1;0m/%1B%5B39m%20%20%20%20%20%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20'
const banner2 = `
/**
 *    _____ _________    __    ___    ____
 *   / ___// ____/   |  / /   /   |  / __ \\
 *   \\__ \\/ /   / /| | / /   / /| | / /_/ /
 *  ___/ / /___/ ___ |/ /___/ ___ |/ _\, _/
 * /____/\\____/_/  |_/_____/_/  |_/_/ |_|
 *
 * {{ packageName }} {{ version }}
 *
 * Website: https://scalar.com
 * GitHub:  https://github.com/scalar/scalar
 * License: https://github.com/scalar/scalar/blob/main/LICENSE
**/
`

const banner4 = '%20%20%20_______________%20%20____%20%20______%20%20%20__________%20%20___%20%20%20%20____________%0D%0A%20%20/%20___/_%20%20__/%20__%20%5C/%20__%20%5C/%20____/%20%20/%20____/%20__%20%5C/%20%20%20%7C%20%20/%20____/_%20%20__/%0D%0A%20%20%5C__%20%5C%20/%20/%20/%20/%20/%20/%20/_/%20/%20__/%20%20%20%20/%20/%20%20%20/%20/_/%20/%20/%7C%20%7C%20/%20/_%20%20%20%20/%20/%20%20%20%0D%0A%20___/%20//%20/%20/%20/_/%20/%20_,%20_/%20/___%20%20%20/%20/___/%20_,%20_/%20___%20%7C/%20__/%20%20%20/%20/%20%20%20%20%0D%0A/____//_/%20%20%5C____/_/%20%7C_/_____/%20%20%20%5C____/_/%20%7C_/_/%20%20%7C_/_/%20%20%20%20%20/_/%20%20%20%20%20%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20'

const te = new TextEncoder()
const a = gradient.rainbow(banner3)



const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const generate = async () => {

  const file = path.resolve(__dirname, 'banner.txt');

  await writeFile(file, (gradient({r:143, g:21, b:255}, {r:244, g:114, b:182})(banner3)));
}

generate()

function banner_create(version='1.0.0') {
  const banner3 = '   _______________  ____  ______   __________  ___    ____________\r\n  \/ ___\/_  __\/ __ \\\/ __ \\\/ ____\/  \/ ____\/ __ \\\/   |  \/ ____\/_  __\/\r\n  \\__ \\ \/ \/ \/ \/ \/ \/ \/_\/ \/ __\/    \/ \/   \/ \/_\/ \/ \/| | \/ \/_    \/ \/   \r\n ___\/ \/\/ \/ \/ \/_\/ \/ _, _\/ \/___   \/ \/___\/ _, _\/ ___ |\/ __\/   \/ \/    \r\n\/____\/\/_\/  \\____\/_\/ |_\/_____\/   \\____\/_\/ |_\/_\/  |_\/_\/     \/_\/     \r\n                                                                  '
  const c = {
    red: '\x1b[1;31m',
    magenta: `\x1b[1;35m`,
    yellow: `\x1b[33m`,
    reset: `\x1b[0m`,
  }

  let final = c.magenta;
  final += banner3;
  final += `${c.red}\nv${version}`
  final += `\n
${c.red}Dashboard:      ${c.reset}/api/dashboard    
${c.red}API Reference:  ${c.reset}/api/reference    
${c.red}Website:        ${c.reset}https://storecraft.dev
${c.red}GitHub:         ${c.reset}https://github.com/store-craft/storecraft
    `

  return final;
}

console.log(banner_create())

// console.log('\x1b[35mtomer')
// console.log('\x1b[0mdddd')
// console.log(decodeURI(banner3_1))
// console.log(banner3)
// console.log(gradient({r:143, g:21, b:255}, {r:244, g:114, b:182})(banner3))
// console.log(`[32mtomer3`)
// console.log(decodeURI(banner4))

// console.log(gradient.rainbow(banner));
// console.log(gradient.rainbow(banner3));
// console.log(gradient.rainbow(banner2));

const colorize = (...args) => ({
    black: `\x1b[30m${args.join(' ')}`,
    red: `\x1b[31m${args.join(' ')}`,
    green: `\x1b[32m${args.join(' ')}`,
    yellow: `\x1b[33m${args.join(' ')}`,
    blue: `\x1b[34m${args.join(' ')}`,
    magenta: `\x1b[35m${args.join(' ')}`,
    cyan: `\x1b[36m${args.join(' ')}`,
    white: `\x1b[37m${args.join(' ')}`,
    bgBlack: `\x1b[40m${args.join(' ')}\x1b[0m`,
    bgRed: `\x1b[41m${args.join(' ')}\x1b[0m`,
    bgGreen: `\x1b[42m${args.join(' ')}\x1b[0m`,
    bgYellow: `\x1b[43m${args.join(' ')}\x1b[0m`,
    bgBlue: `\x1b[44m${args.join(' ')}\x1b[0m`,
    bgMagenta: `\x1b[45m${args.join(' ')}\x1b[0m`,
    bgCyan: `\x1b[46m${args.join(' ')}\x1b[0m`,
    bgWhite: `\x1b[47m${args.join(' ')}\x1b[0m`
  });
  
//   console.log(colorize('foo').red); // 'foo' (red letters)
//   console.log(colorize('foo', 'bar').bgBlue); // 'foo bar' (blue background)
//   console.log(colorize(colorize('foo').yellow, colorize('foo').green).bgWhite);
  